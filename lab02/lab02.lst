CCS PCH C Compiler, Version 4.114, 93460303               24-mai-17 18:22

               Filename: C:\Users\Fábio Bends\Documents\PIC\lab02\lab02.lst

               ROM used: 180 bytes (1%)
                         Largest free fragment is 32588
               RAM used: 6 (0%) at main() level
                         7 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   002A
.................... #include <lab02.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES PLL1                  	//No PLL PreScaler 
.................... #FUSES CPUDIV1               	//No System Clock Postscaler 
.................... #FUSES NOUSBDIV              	//USB clock source comes from primary oscillator 
.................... #FUSES HSPLL                 	//High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES PBADEN                	//PORTB pins are configured as analog input channels on RESET 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES ICPRT                 	//ICPRT enabled 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(clock=20000000) 
0004:  CLRF   FEA
0006:  MOVLW  07
0008:  MOVWF  FE9
000A:  MOVF   FEF,W
000C:  BZ    0028
000E:  MOVLW  06
0010:  MOVWF  01
0012:  CLRF   00
0014:  DECFSZ 00,F
0016:  BRA    0014
0018:  DECFSZ 01,F
001A:  BRA    0012
001C:  MOVLW  7B
001E:  MOVWF  00
0020:  DECFSZ 00,F
0022:  BRA    0020
0024:  DECFSZ FEF,F
0026:  BRA    000E
0028:  RETLW  00
....................  
....................  
.................... #define BOTAO PIN_E0 
.................... #define LED_VERDE PIN_B0 
.................... #define LED_AMARELO PIN_B1 
.................... #define LED_VERMELHO PIN_B2 
....................  
.................... void main() 
.................... { 
002A:  CLRF   FF8
002C:  BCF    FD0.7
002E:  CLRF   FEA
0030:  CLRF   FE9
0032:  MOVF   FC1,W
0034:  ANDLW  C0
0036:  IORLW  0F
0038:  MOVWF  FC1
003A:  MOVLW  07
003C:  MOVWF  FB4
....................    int1 button; 
....................    // TODO: USER CODE!! 
....................    set_tris_b(0b00011111); 
003E:  MOVLW  1F
0040:  MOVWF  F93
....................    set_tris_e(0xff); 
0042:  MOVLW  FF
0044:  MOVWF  F96
....................    while(TRUE){ 
....................    output_high(LED_VERDE); 
0046:  BCF    F93.0
0048:  BSF    F8A.0
....................    button=input(BOTAO); 
004A:  BSF    F96.0
004C:  BCF    05.0
004E:  BTFSC  F84.0
0050:  BSF    05.0
....................    if (button==0){ 
0052:  BTFSC  05.0
0054:  BRA    00B0
....................    output_low(LED_VERMELHO); 
0056:  BCF    F93.2
0058:  BCF    F8A.2
....................    output_low(LED_AMARELO); 
005A:  BCF    F93.1
005C:  BCF    F8A.1
....................    output_high(LED_VERDE); 
005E:  BCF    F93.0
0060:  BSF    F8A.0
....................    delay_ms(5000); 
0062:  MOVLW  14
0064:  MOVWF  06
0066:  MOVLW  FA
0068:  MOVWF  07
006A:  RCALL  0004
006C:  DECFSZ 06,F
006E:  BRA    0066
....................    output_low(LED_VERDE); 
0070:  BCF    F93.0
0072:  BCF    F8A.0
....................    output_low(LED_VERMELHO); 
0074:  BCF    F93.2
0076:  BCF    F8A.2
....................    output_high(LED_AMARELO); 
0078:  BCF    F93.1
007A:  BSF    F8A.1
....................    delay_ms(2000); 
007C:  MOVLW  08
007E:  MOVWF  06
0080:  MOVLW  FA
0082:  MOVWF  07
0084:  RCALL  0004
0086:  DECFSZ 06,F
0088:  BRA    0080
....................    output_low(LED_AMARELO); 
008A:  BCF    F93.1
008C:  BCF    F8A.1
....................    output_low(LED_VERMELHO); 
008E:  BCF    F93.2
0090:  BCF    F8A.2
....................    output_high(LED_VERMELHO); 
0092:  BCF    F93.2
0094:  BSF    F8A.2
....................    delay_ms(4000); 
0096:  MOVLW  10
0098:  MOVWF  06
009A:  MOVLW  FA
009C:  MOVWF  07
009E:  RCALL  0004
00A0:  DECFSZ 06,F
00A2:  BRA    009A
....................    output_low(LED_AMARELO); 
00A4:  BCF    F93.1
00A6:  BCF    F8A.1
....................    output_low(LED_VERMELHO); 
00A8:  BCF    F93.2
00AA:  BCF    F8A.2
....................    output_low(LED_VERMELHO); 
00AC:  BCF    F93.2
00AE:  BCF    F8A.2
....................       } 
....................    } 
00B0:  BRA    0046
.................... } 
....................  
00B2:  SLEEP 

Configuration Fuses:
   Word  1: CE00   PLL1 CPUDIV1 NOUSBDIV HSPLL FCMEN IESO
   Word  2: 0E39   NOPUT NOBROWNOUT BORV20 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICPRT NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
