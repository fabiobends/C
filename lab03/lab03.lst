CCS PCH C Compiler, Version 4.114, 93460303               24-mai-17 18:26

               Filename: C:\Users\Fábio Bends\Documents\PIC\lab03\lab03.lst

               ROM used: 250 bytes (1%)
                         Largest free fragment is 32518
               RAM used: 5 (0%) at main() level
                         8 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   00A2
.................... #include <lab03.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES PLL1                  	//No PLL PreScaler 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES USBDIV                	//USB clock source comes from PLL divide by 2 
.................... #FUSES HSPLL                 	//High Speed Crystal/Resonator with PLL enabled 
.................... #FUSES FCMEN                 	//Fail-safe clock monitor enabled 
.................... #FUSES IESO                  	//Internal External Switch Over mode enabled 
.................... #FUSES NOPUT                 	//No Power Up Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES BORV20                	//Brownout reset at 2.0V 
.................... #FUSES VREGEN                	//USB voltage regulator enabled 
.................... #FUSES PBADEN                	//PORTB pins are configured as analog input channels on RESET 
.................... #FUSES LPT1OSC               	//Timer1 configured for low-power operation 
.................... #FUSES MCLR                  	//Master Clear pin enabled 
.................... #FUSES STVREN                	//Stack full/underflow will cause reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES ICPRT                 	//ICPRT enabled 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES NODEBUG               	//No Debug mode for ICD 
.................... #FUSES NOPROTECT             	//Code not protected from reading 
.................... #FUSES NOCPB                 	//No Boot Block code protection 
.................... #FUSES NOCPD                 	//No EE protection 
.................... #FUSES NOWRT                 	//Program memory not write protected 
.................... #FUSES NOWRTC                	//configuration not registers write protected 
.................... #FUSES NOWRTB                	//Boot block not write protected 
.................... #FUSES NOWRTD                	//Data EEPROM not write protected 
.................... #FUSES NOEBTR                	//Memory not protected from table reads 
.................... #FUSES NOEBTRB               	//Boot block not protected from table reads 
....................  
.................... #use delay(crystal=20000000,  clock=5000000) 
*
007A:  CLRF   FEA
007C:  MOVLW  08
007E:  MOVWF  FE9
0080:  MOVF   FEF,W
0082:  BZ    009E
0084:  MOVLW  01
0086:  MOVWF  01
0088:  CLRF   00
008A:  DECFSZ 00,F
008C:  BRA    008A
008E:  DECFSZ 01,F
0090:  BRA    0088
0092:  MOVLW  9E
0094:  MOVWF  00
0096:  DECFSZ 00,F
0098:  BRA    0096
009A:  DECFSZ FEF,F
009C:  BRA    0084
009E:  GOTO   00EC (RETURN)
....................  
....................  
....................  
.................... byte dec2bcd(int num) 
.................... { 
....................    byte bcd; 
....................    switch(num) 
....................    { 
*
0004:  MOVF   07,W
0006:  XORLW  00
0008:  BZ    0030
000A:  XORLW  01
000C:  BZ    0036
000E:  XORLW  03
0010:  BZ    003C
0012:  XORLW  01
0014:  BZ    0042
0016:  XORLW  07
0018:  BZ    0048
001A:  XORLW  01
001C:  BZ    004E
001E:  XORLW  03
0020:  BZ    0054
0022:  XORLW  01
0024:  BZ    005A
0026:  XORLW  0F
0028:  BZ    0060
002A:  XORLW  01
002C:  BZ    0066
002E:  BRA    006C
....................    case 0: bcd = 0b00111111;  
0030:  MOVLW  3F
0032:  MOVWF  08
....................    break; 
0034:  BRA    0072
....................    case 1: bcd = 0b00000110;  
0036:  MOVLW  06
0038:  MOVWF  08
....................    break; 
003A:  BRA    0072
....................    case 2: bcd = 0b01011011;  
003C:  MOVLW  5B
003E:  MOVWF  08
....................    break; 
0040:  BRA    0072
....................    case 3: bcd = 0b01001111;  
0042:  MOVLW  4F
0044:  MOVWF  08
....................    break; 
0046:  BRA    0072
....................    case 4: bcd = 0b01100110;  
0048:  MOVLW  66
004A:  MOVWF  08
....................    break; 
004C:  BRA    0072
....................    case 5: bcd = 0b01101101;  
004E:  MOVLW  6D
0050:  MOVWF  08
....................    break; 
0052:  BRA    0072
....................    case 6: bcd = 0b01111101;  
0054:  MOVLW  7D
0056:  MOVWF  08
....................    break; 
0058:  BRA    0072
....................    case 7: bcd = 0b00000111;  
005A:  MOVLW  07
005C:  MOVWF  08
....................    break; 
005E:  BRA    0072
....................    case 8: bcd = 0b01111111;  
0060:  MOVLW  7F
0062:  MOVWF  08
....................    break; 
0064:  BRA    0072
....................    case 9: bcd = 0b01101111;  
0066:  MOVLW  6F
0068:  MOVWF  08
....................    break; 
006A:  BRA    0072
....................    default : bcd = 0b01000000;  
006C:  MOVLW  40
006E:  MOVWF  08
....................    break; 
0070:  BRA    0072
....................    } 
....................    return bcd; 
0072:  MOVFF  08,01
.................... } 
0076:  GOTO   00DC (RETURN)
.................... void main() 
.................... { 
*
00A2:  CLRF   FF8
00A4:  BCF    FD0.7
00A6:  CLRF   FEA
00A8:  CLRF   FE9
00AA:  MOVF   FC1,W
00AC:  ANDLW  C0
00AE:  IORLW  0F
00B0:  MOVWF  FC1
00B2:  MOVLW  07
00B4:  MOVWF  FB4
....................    set_tris_d(0x00); 
00B6:  MOVLW  00
00B8:  MOVWF  F95
....................    set_tris_e(0xff); 
00BA:  MOVLW  FF
00BC:  MOVWF  F96
....................    int8 botao, i; 
....................    while(TRUE) 
....................    { 
....................    output_d(0x00); 
00BE:  CLRF   F95
00C0:  CLRF   F8C
....................    botao=input(pin_e0); 
00C2:  BSF    F96.0
00C4:  CLRF   05
00C6:  BTFSC  F84.0
00C8:  INCF   05,F
....................       if(botao==0) 
00CA:  MOVF   05,F
00CC:  BNZ   00F6
....................       { 
....................          for(i=0; i<=9; i++) 
00CE:  CLRF   06
00D0:  MOVF   06,W
00D2:  SUBLW  09
00D4:  BNC   00F4
....................          { 
....................          output_d(dec2bcd(i)); 
00D6:  MOVFF  06,07
00DA:  BRA    0004
00DC:  CLRF   F95
00DE:  MOVFF  01,F8C
....................          delay_ms(4000); 
00E2:  MOVLW  10
00E4:  MOVWF  07
00E6:  MOVLW  FA
00E8:  MOVWF  08
00EA:  BRA    007A
00EC:  DECFSZ 07,F
00EE:  BRA    00E6
....................          } 
00F0:  INCF   06,F
00F2:  BRA    00D0
....................          i=0; 
00F4:  CLRF   06
....................       } 
....................    } 
00F6:  BRA    00BE
.................... } 
00F8:  SLEEP 

Configuration Fuses:
   Word  1: CC3C   PLL5 CPUDIV4 USBDIV HS FCMEN IESO
   Word  2: 0E39   NOPUT NOBROWNOUT BORV20 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICPRT NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
